#!/usr/local/bin/zsh
#新しい環境に取り込んだ時のインストール

DIR=$(cd `dirname $0`; pwd)

if [ ! -e `which git` ]; then
    echo 'not found git'
fi 

if [ ! -e `which vim` ]; then
    echo 'not found vim.'
    echo 'Start installing ...'
    $DIR/scripts/vim-install.sh
fi 

if [ ! -e `which python` ]; then
    # Install powerline
    pip install powerline-status powerline-mem-segment psutil netifaces
fi 

[[ -f $DIR/_gitignore ]] && ln -s $DIR/_gitignore ~/.gitignore

for dotfile in $DIR/(.|_)*; do
    if [[ $dotfile =~ ".git($|module|ignore)|.config" ]]; then
        continue
    fi

    dstpath="$HOME/${dotfile##*/}" 
    if [ ! -d $dstpath ]; then
        if [ -L $dstpath ]; then
            rm $dstpath
            echo "remove $dstpath"
        fi 
        echo "$dotfile => $dstpath" 
        ln -s $dotfile ~/ 
    fi
done

for config in $DIR/.config/*(/) ; do
    file_name="${config##*/}" 

    dstpath="$HOME/.config/$file_name"
    if [ -e $dstpath ]; then
        echo "Already exists: ${dstpath}"
    else
        echo "$config => $dstpath" 
        ln -s $config ~/.config
    fi 
done

for dotfile in $DIR/local_template/.*(.) ; do
    file_name="${dotfile##*/}" 

    dstpath="$HOME/.local$file_name"
    if [ -e $dstpath ]; then
        echo "Already exists: ${dstpath}"
    else
        echo "$dotfile => $dstpath" 
        cp $dotfile $dstpath
    fi 
done

for dotfile in $DIR/scripts/*(x) ; do
    file_name="${dotfile##*/}" 

    dstpath="$HOME/.local/bin/${dotfile##*/}" 
    if [ -e $dstpath ]; then
        echo "Already exists: ${dstpath}"
    else
        echo "$dotfile => $dstpath" 
        ln -s $dotfile(:A) $dstpath 
    fi 
done

ln -sf $DIR/.zsh/zshenv.home ${HOME}/.zshenv
